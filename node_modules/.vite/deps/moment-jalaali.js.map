{
  "version": 3,
  "sources": ["../../jalaali-js/index.js", "../../moment-jalaali/index.js"],
  "sourcesContent": ["/*\r\n  Expose functions.\r\n*/\r\nmodule.exports =\r\n  { toJalaali: toJalaali\r\n  , toGregorian: toGregorian\r\n  , isValidJalaaliDate: isValidJalaaliDate\r\n  , isLeapJalaaliYear: isLeapJalaaliYear\r\n  , jalaaliMonthLength: jalaaliMonthLength\r\n  , jalCal: jalCal\r\n  , j2d: j2d\r\n  , d2j: d2j\r\n  , g2d: g2d\r\n  , d2g: d2g\r\n  , jalaaliToDateObject: jalaaliToDateObject\r\n  , jalaaliWeek: jalaaliWeek\r\n  }\r\n\r\n/*\r\n  Jalaali years starting the 33-year rule.\r\n*/\r\nvar breaks =  [ -61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210\r\n  , 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178\r\n  ]\r\n\r\n/*\r\n  Converts a Gregorian date to Jalaali.\r\n*/\r\nfunction toJalaali(gy, gm, gd) {\r\n  if (Object.prototype.toString.call(gy) === '[object Date]') {\r\n    gd = gy.getDate()\r\n    gm = gy.getMonth() + 1\r\n    gy = gy.getFullYear()\r\n  }\r\n  return d2j(g2d(gy, gm, gd))\r\n}\r\n\r\n/*\r\n  Converts a Jalaali date to Gregorian.\r\n*/\r\nfunction toGregorian(jy, jm, jd) {\r\n  return d2g(j2d(jy, jm, jd))\r\n}\r\n\r\n/*\r\n  Checks whether a Jalaali date is valid or not.\r\n*/\r\nfunction isValidJalaaliDate(jy, jm, jd) {\r\n  return  jy >= -61 && jy <= 3177 &&\r\n          jm >= 1 && jm <= 12 &&\r\n          jd >= 1 && jd <= jalaaliMonthLength(jy, jm)\r\n}\r\n\r\n/*\r\n  Is this a leap year or not?\r\n*/\r\nfunction isLeapJalaaliYear(jy) {\r\n  return jalCalLeap(jy) === 0\r\n}\r\n\r\n/*\r\n  Number of days in a given month in a Jalaali year.\r\n*/\r\nfunction jalaaliMonthLength(jy, jm) {\r\n  if (jm <= 6) return 31\r\n  if (jm <= 11) return 30\r\n  if (isLeapJalaaliYear(jy)) return 30\r\n  return 29\r\n}\r\n\r\n/*\r\n    This function determines if the Jalaali (Persian) year is\r\n    leap (366-day long) or is the common year (365 days)\r\n\r\n    @param jy Jalaali calendar year (-61 to 3177)\r\n    @returns number of years since the last leap year (0 to 4)\r\n */\r\nfunction jalCalLeap(jy) {\r\n  var bl = breaks.length\r\n    , jp = breaks[0]\r\n    , jm\r\n    , jump\r\n    , leap\r\n    , n\r\n    , i\r\n\r\n  if (jy < jp || jy >= breaks[bl - 1])\r\n    throw new Error('Invalid Jalaali year ' + jy)\r\n\r\n  for (i = 1; i < bl; i += 1) {\r\n    jm = breaks[i]\r\n    jump = jm - jp\r\n    if (jy < jm)\r\n      break\r\n    jp = jm\r\n  }\r\n  n = jy - jp\r\n\r\n  if (jump - n < 6)\r\n    n = n - jump + div(jump + 4, 33) * 33\r\n  leap = mod(mod(n + 1, 33) - 1, 4)\r\n  if (leap === -1) {\r\n    leap = 4\r\n  }\r\n\r\n  return leap\r\n}\r\n\r\n/*\r\n  This function determines if the Jalaali (Persian) year is\r\n  leap (366-day long) or is the common year (365 days), and\r\n  finds the day in March (Gregorian calendar) of the first\r\n  day of the Jalaali year (jy).\r\n\r\n  @param jy Jalaali calendar year (-61 to 3177)\r\n  @param withoutLeap when don't need leap (true or false) default is false\r\n  @return\r\n    leap: number of years since the last leap year (0 to 4)\r\n    gy: Gregorian year of the beginning of Jalaali year\r\n    march: the March day of Farvardin the 1st (1st day of jy)\r\n  @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\r\n  @see: http://www.fourmilab.ch/documents/calendar/\r\n*/\r\nfunction jalCal(jy, withoutLeap) {\r\n  var bl = breaks.length\r\n    , gy = jy + 621\r\n    , leapJ = -14\r\n    , jp = breaks[0]\r\n    , jm\r\n    , jump\r\n    , leap\r\n    , leapG\r\n    , march\r\n    , n\r\n    , i\r\n\r\n  if (jy < jp || jy >= breaks[bl - 1])\r\n    throw new Error('Invalid Jalaali year ' + jy)\r\n\r\n  // Find the limiting years for the Jalaali year jy.\r\n  for (i = 1; i < bl; i += 1) {\r\n    jm = breaks[i]\r\n    jump = jm - jp\r\n    if (jy < jm)\r\n      break\r\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4)\r\n    jp = jm\r\n  }\r\n  n = jy - jp\r\n\r\n  // Find the number of leap years from AD 621 to the beginning\r\n  // of the current Jalaali year in the Persian calendar.\r\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4)\r\n  if (mod(jump, 33) === 4 && jump - n === 4)\r\n    leapJ += 1\r\n\r\n  // And the same in the Gregorian calendar (until the year gy).\r\n  leapG = div(gy, 4) - div((div(gy, 100) + 1) * 3, 4) - 150\r\n\r\n  // Determine the Gregorian date of Farvardin the 1st.\r\n  march = 20 + leapJ - leapG\r\n\r\n  // return with gy and march when we don't need leap\r\n  if (withoutLeap) return { gy: gy, march: march };\r\n\r\n\r\n  // Find how many years have passed since the last leap year.\r\n  if (jump - n < 6)\r\n    n = n - jump + div(jump + 4, 33) * 33\r\n  leap = mod(mod(n + 1, 33) - 1, 4)\r\n  if (leap === -1) {\r\n    leap = 4\r\n  }\r\n\r\n  return  { leap: leap\r\n          , gy: gy\r\n          , march: march\r\n          }\r\n}\r\n\r\n/*\r\n  Converts a date of the Jalaali calendar to the Julian Day number.\r\n\r\n  @param jy Jalaali year (1 to 3100)\r\n  @param jm Jalaali month (1 to 12)\r\n  @param jd Jalaali day (1 to 29/31)\r\n  @return Julian Day number\r\n*/\r\nfunction j2d(jy, jm, jd) {\r\n  var r = jalCal(jy, true)\r\n  return g2d(r.gy, 3, r.march) + (jm - 1) * 31 - div(jm, 7) * (jm - 7) + jd - 1\r\n}\r\n\r\n/*\r\n  Converts the Julian Day number to a date in the Jalaali calendar.\r\n\r\n  @param jdn Julian Day number\r\n  @return\r\n    jy: Jalaali year (1 to 3100)\r\n    jm: Jalaali month (1 to 12)\r\n    jd: Jalaali day (1 to 29/31)\r\n*/\r\nfunction d2j(jdn) {\r\n  var gy = d2g(jdn).gy // Calculate Gregorian year (gy).\r\n    , jy = gy - 621\r\n    , r = jalCal(jy, false)\r\n    , jdn1f = g2d(gy, 3, r.march)\r\n    , jd\r\n    , jm\r\n    , k\r\n\r\n  // Find number of days that passed since 1 Farvardin.\r\n  k = jdn - jdn1f\r\n  if (k >= 0) {\r\n    if (k <= 185) {\r\n      // The first 6 months.\r\n      jm = 1 + div(k, 31)\r\n      jd = mod(k, 31) + 1\r\n      return  { jy: jy\r\n              , jm: jm\r\n              , jd: jd\r\n              }\r\n    } else {\r\n      // The remaining months.\r\n      k -= 186\r\n    }\r\n  } else {\r\n    // Previous Jalaali year.\r\n    jy -= 1\r\n    k += 179\r\n    if (r.leap === 1)\r\n      k += 1\r\n  }\r\n  jm = 7 + div(k, 30)\r\n  jd = mod(k, 30) + 1\r\n  return  { jy: jy\r\n          , jm: jm\r\n          , jd: jd\r\n          }\r\n}\r\n\r\n/*\r\n  Calculates the Julian Day number from Gregorian or Julian\r\n  calendar dates. This integer number corresponds to the noon of\r\n  the date (i.e. 12 hours of Universal Time).\r\n  The procedure was tested to be good since 1 March, -100100 (of both\r\n  calendars) up to a few million years into the future.\r\n\r\n  @param gy Calendar year (years BC numbered 0, -1, -2, ...)\r\n  @param gm Calendar month (1 to 12)\r\n  @param gd Calendar day of the month (1 to 28/29/30/31)\r\n  @return Julian Day number\r\n*/\r\nfunction g2d(gy, gm, gd) {\r\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4)\r\n      + div(153 * mod(gm + 9, 12) + 2, 5)\r\n      + gd - 34840408\r\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752\r\n  return d\r\n}\r\n\r\n/*\r\n  Calculates Gregorian and Julian calendar dates from the Julian Day number\r\n  (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\r\n  calendars) to some millions years ahead of the present.\r\n\r\n  @param jdn Julian Day number\r\n  @return\r\n    gy: Calendar year (years BC numbered 0, -1, -2, ...)\r\n    gm: Calendar month (1 to 12)\r\n    gd: Calendar day of the month M (1 to 28/29/30/31)\r\n*/\r\nfunction d2g(jdn) {\r\n  var j\r\n    , i\r\n    , gd\r\n    , gm\r\n    , gy\r\n  j = 4 * jdn + 139361631\r\n  j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908\r\n  i = div(mod(j, 1461), 4) * 5 + 308\r\n  gd = div(mod(i, 153), 5) + 1\r\n  gm = mod(div(i, 153), 12) + 1\r\n  gy = div(j, 1461) - 100100 + div(8 - gm, 6)\r\n  return  { gy: gy\r\n          , gm: gm\r\n          , gd: gd\r\n          }\r\n}\r\n\r\n/**\r\n * Return Saturday and Friday day of current week(week start in Saturday)\r\n * @param {number} jy jalaali year\r\n * @param {number} jm jalaali month\r\n * @param {number} jd jalaali day\r\n * @returns Saturday and Friday of current week\r\n */\r\nfunction jalaaliWeek(jy, jm, jd) {\r\n  var dayOfWeek = jalaaliToDateObject(jy, jm, jd).getDay();\r\n\r\n  var startDayDifference = dayOfWeek == 6 ? 0 : -(dayOfWeek+1);\r\n  var endDayDifference = 6+startDayDifference;\r\n\r\n  return {\r\n    saturday: d2j(j2d(jy, jm, jd+startDayDifference)),\r\n    friday: d2j(j2d(jy, jm, jd+endDayDifference))\r\n  }\r\n}\r\n\r\n/**\r\n * Convert Jalaali calendar dates to javascript Date object\r\n * @param {number} jy jalaali year\r\n * @param {number} jm jalaali month\r\n * @param {number} jd jalaali day\r\n * @param {number} [h] hours\r\n * @param {number} [m] minutes\r\n * @param {number} [s] seconds\r\n * @param {number} [ms] milliseconds\r\n * @returns Date object of the jalaali calendar dates\r\n */\r\nfunction jalaaliToDateObject(\r\n  jy,\r\n  jm,\r\n  jd,\r\n  h,\r\n  m,\r\n  s,\r\n  ms\r\n) {\r\n  var gregorianCalenderDate = toGregorian(jy, jm, jd);\r\n\r\n  return new Date(\r\n    gregorianCalenderDate.gy,\r\n    gregorianCalenderDate.gm - 1,\r\n    gregorianCalenderDate.gd,\r\n    h || 0,\r\n    m || 0,\r\n    s || 0,\r\n    ms || 0\r\n  );\r\n}\r\n\r\n/*\r\n  Utility helper functions.\r\n*/\r\n\r\nfunction div(a, b) {\r\n  return ~~(a / b)\r\n}\r\n\r\nfunction mod(a, b) {\r\n  return a - ~~(a / b) * b\r\n}\r\n", "\r\nmodule.exports = jMoment\r\n\r\nvar moment = require('moment/moment')\r\n  , jalaali = require('jalaali-js')\r\n\r\n/************************************\r\n    Constants\r\n************************************/\r\n\r\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?j(Mo|MM?M?M?|Do|DDDo|DD?D?D?|w[o|w]?|YYYYY|YYYY|YY|gg(ggg?)?|)|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g\r\n  , localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS?|LL?L?L?|l{1,4})/g\r\n\r\n  , parseTokenOneOrTwoDigits = /\\d\\d?/\r\n  , parseTokenOneToThreeDigits = /\\d{1,3}/\r\n  , parseTokenThreeDigits = /\\d{3}/\r\n  , parseTokenFourDigits = /\\d{1,4}/\r\n  , parseTokenSixDigits = /[+\\-]?\\d{1,6}/\r\n  , parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i\r\n  , parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/i\r\n  , parseTokenT = /T/i\r\n  , parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/\r\n  , symbolMap = {\r\n    '1': '۱',\r\n    '2': '۲',\r\n    '3': '۳',\r\n    '4': '۴',\r\n    '5': '۵',\r\n    '6': '۶',\r\n    '7': '۷',\r\n    '8': '۸',\r\n    '9': '۹',\r\n    '0': '۰'\r\n  }\r\n  , numberMap = {\r\n    '۱': '1',\r\n    '۲': '2',\r\n    '۳': '3',\r\n    '۴': '4',\r\n    '۵': '5',\r\n    '۶': '6',\r\n    '۷': '7',\r\n    '۸': '8',\r\n    '۹': '9',\r\n    '۰': '0'\r\n  }\r\n\r\n\r\n  , unitAliases =\r\n    { jm: 'jmonth'\r\n    , jmonths: 'jmonth'\r\n    , jy: 'jyear'\r\n    , jyears: 'jyear'\r\n    }\r\n\r\n  , formatFunctions = {}\r\n\r\n  , ordinalizeTokens = 'DDD w M D'.split(' ')\r\n  , paddedTokens = 'M D w'.split(' ')\r\n\r\n  , formatTokenFunctions =\r\n    { jM: function () {\r\n        return this.jMonth() + 1\r\n      }\r\n    , jMMM: function (format) {\r\n        return this.localeData().jMonthsShort(this, format)\r\n      }\r\n    , jMMMM: function (format) {\r\n        return this.localeData().jMonths(this, format)\r\n      }\r\n    , jD: function () {\r\n        return this.jDate()\r\n      }\r\n    , jDDD: function () {\r\n        return this.jDayOfYear()\r\n      }\r\n    , jw: function () {\r\n        return this.jWeek()\r\n      }\r\n    , jYY: function () {\r\n        return leftZeroFill(this.jYear() % 100, 2)\r\n      }\r\n    , jYYYY: function () {\r\n        return leftZeroFill(this.jYear(), 4)\r\n      }\r\n    , jYYYYY: function () {\r\n        return leftZeroFill(this.jYear(), 5)\r\n      }\r\n    , jgg: function () {\r\n        return leftZeroFill(this.jWeekYear() % 100, 2)\r\n      }\r\n    , jgggg: function () {\r\n        return this.jWeekYear()\r\n      }\r\n    , jggggg: function () {\r\n        return leftZeroFill(this.jWeekYear(), 5)\r\n      }\r\n    }\r\n\r\nfunction padToken(func, count) {\r\n  return function (a) {\r\n    return leftZeroFill(func.call(this, a), count)\r\n  }\r\n}\r\nfunction ordinalizeToken(func, period) {\r\n  return function (a) {\r\n    return this.localeData().ordinal(func.call(this, a), period)\r\n  }\r\n}\r\n\r\n(function () {\r\n  var i\r\n  while (ordinalizeTokens.length) {\r\n    i = ordinalizeTokens.pop()\r\n    formatTokenFunctions['j' + i + 'o'] = ordinalizeToken(formatTokenFunctions['j' + i], i)\r\n  }\r\n  while (paddedTokens.length) {\r\n    i = paddedTokens.pop()\r\n    formatTokenFunctions['j' + i + i] = padToken(formatTokenFunctions['j' + i], 2)\r\n  }\r\n  formatTokenFunctions.jDDDD = padToken(formatTokenFunctions.jDDD, 3)\r\n}())\r\n\r\n/************************************\r\n    Helpers\r\n************************************/\r\n\r\nfunction extend(a, b) {\r\n  var key\r\n  for (key in b)\r\n    if (b.hasOwnProperty(key))\r\n      a[key] = b[key]\r\n  return a\r\n}\r\n\r\nfunction leftZeroFill(number, targetLength) {\r\n  var output = number + ''\r\n  while (output.length < targetLength)\r\n    output = '0' + output\r\n  return output\r\n}\r\n\r\nfunction isArray(input) {\r\n  return Object.prototype.toString.call(input) === '[object Array]'\r\n}\r\n\r\n// function compareArrays(array1, array2) {\r\n//   var len = Math.min(array1.length, array2.length)\r\n//     , lengthDiff = Math.abs(array1.length - array2.length)\r\n//     , diffs = 0\r\n//     , i\r\n//   for (i = 0; i < len; i += 1)\r\n//     if (~~array1[i] !== ~~array2[i])\r\n//       diffs += 1\r\n//   return diffs + lengthDiff\r\n// }\r\n\r\nfunction normalizeUnits(units) {\r\n  if (units) {\r\n    var lowered = units.toLowerCase()\r\n    units = unitAliases[lowered] || lowered\r\n  }\r\n  return units\r\n}\r\n\r\nfunction setDate(m, year, month, date) {\r\n  var d = m._d\r\n  if (isNaN(year)) {\r\n    m._isValid = false\r\n  }\r\n  if (m._isUTC) {\r\n    /*eslint-disable new-cap*/\r\n    m._d = new Date(Date.UTC(year, month, date,\r\n        d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds()))\r\n    /*eslint-enable new-cap*/\r\n  } else {\r\n    m._d = new Date(year, month, date,\r\n        d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds())\r\n  }\r\n}\r\n\r\nfunction objectCreate(parent) {\r\n  function F() {}\r\n  F.prototype = parent\r\n  return new F()\r\n}\r\n\r\nfunction getPrototypeOf(object) {\r\n  if (Object.getPrototypeOf)\r\n    return Object.getPrototypeOf(object)\r\n  else if (''.__proto__)\r\n    return object.__proto__\r\n  else\r\n    return object.constructor.prototype\r\n}\r\n\r\n/************************************\r\n    Languages\r\n************************************/\r\nextend(getPrototypeOf(moment.localeData()),\r\n  { _jMonths: [ 'Farvardin'\r\n              , 'Ordibehesht'\r\n              , 'Khordaad'\r\n              , 'Tir'\r\n              , 'Amordaad'\r\n              , 'Shahrivar'\r\n              , 'Mehr'\r\n              , 'Aabaan'\r\n              , 'Aazar'\r\n              , 'Dey'\r\n              , 'Bahman'\r\n              , 'Esfand'\r\n              ]\r\n  , jMonths: function (m) {\r\n      return this._jMonths[m.jMonth()]\r\n    }\r\n\r\n  , _jMonthsShort:  [ 'Far'\r\n                    , 'Ord'\r\n                    , 'Kho'\r\n                    , 'Tir'\r\n                    , 'Amo'\r\n                    , 'Sha'\r\n                    , 'Meh'\r\n                    , 'Aab'\r\n                    , 'Aaz'\r\n                    , 'Dey'\r\n                    , 'Bah'\r\n                    , 'Esf'\r\n                    ]\r\n  , jMonthsShort: function (m) {\r\n      return this._jMonthsShort[m.jMonth()]\r\n    }\r\n\r\n  , jMonthsParse: function (monthName) {\r\n      var i\r\n        , mom\r\n        , regex\r\n      if (!this._jMonthsParse)\r\n        this._jMonthsParse = []\r\n      for (i = 0; i < 12; i += 1) {\r\n        // Make the regex if we don't have it already.\r\n        if (!this._jMonthsParse[i]) {\r\n          mom = jMoment([2000, (2 + i) % 12, 25])\r\n          regex = '^' + this.jMonths(mom, '') + '|^' + this.jMonthsShort(mom, '')\r\n          this._jMonthsParse[i] = new RegExp(regex.replace('.', ''), 'i')\r\n        }\r\n        // Test the regex.\r\n        if (this._jMonthsParse[i].test(monthName))\r\n          return i\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\n/************************************\r\n    Formatting\r\n************************************/\r\n\r\nfunction makeFormatFunction(format) {\r\n  var array = format.match(formattingTokens)\r\n    , length = array.length\r\n    , i\r\n\r\n  for (i = 0; i < length; i += 1)\r\n    if (formatTokenFunctions[array[i]])\r\n      array[i] = formatTokenFunctions[array[i]]\r\n\r\n  return function (mom) {\r\n    var output = ''\r\n    for (i = 0; i < length; i += 1)\r\n      output += array[i] instanceof Function ? '[' + array[i].call(mom, format) + ']' : array[i]\r\n    return output\r\n  }\r\n}\r\n\r\n/************************************\r\n    Parsing\r\n************************************/\r\n\r\nfunction getParseRegexForToken(token, config) {\r\n  switch (token) {\r\n  case 'jDDDD':\r\n    return parseTokenThreeDigits\r\n  case 'jYYYY':\r\n    return parseTokenFourDigits\r\n  case 'jYYYYY':\r\n    return parseTokenSixDigits\r\n  case 'jDDD':\r\n    return parseTokenOneToThreeDigits\r\n  case 'jMMM':\r\n  case 'jMMMM':\r\n    return parseTokenWord\r\n  case 'jMM':\r\n  case 'jDD':\r\n  case 'jYY':\r\n  case 'jM':\r\n  case 'jD':\r\n    return parseTokenOneOrTwoDigits\r\n  case 'DDDD':\r\n    return parseTokenThreeDigits\r\n  case 'YYYY':\r\n    return parseTokenFourDigits\r\n  case 'YYYYY':\r\n    return parseTokenSixDigits\r\n  case 'S':\r\n  case 'SS':\r\n  case 'SSS':\r\n  case 'DDD':\r\n    return parseTokenOneToThreeDigits\r\n  case 'MMM':\r\n  case 'MMMM':\r\n  case 'dd':\r\n  case 'ddd':\r\n  case 'dddd':\r\n    return parseTokenWord\r\n  case 'a':\r\n  case 'A':\r\n    return moment.localeData(config._l)._meridiemParse\r\n  case 'X':\r\n    return parseTokenTimestampMs\r\n  case 'Z':\r\n  case 'ZZ':\r\n    return parseTokenTimezone\r\n  case 'T':\r\n    return parseTokenT\r\n  case 'MM':\r\n  case 'DD':\r\n  case 'YY':\r\n  case 'HH':\r\n  case 'hh':\r\n  case 'mm':\r\n  case 'ss':\r\n  case 'M':\r\n  case 'D':\r\n  case 'd':\r\n  case 'H':\r\n  case 'h':\r\n  case 'm':\r\n  case 's':\r\n    return parseTokenOneOrTwoDigits\r\n  default:\r\n    return new RegExp(token.replace('\\\\', ''))\r\n  }\r\n}\r\n\r\nfunction addTimeToArrayFromToken(token, input, config) {\r\n  var a\r\n    , datePartArray = config._a\r\n\r\n  switch (token) {\r\n  case 'jM':\r\n  case 'jMM':\r\n    datePartArray[1] = input == null ? 0 : ~~input - 1\r\n    break\r\n  case 'jMMM':\r\n  case 'jMMMM':\r\n    a = moment.localeData(config._l).jMonthsParse(input)\r\n    if (a != null)\r\n      datePartArray[1] = a\r\n    else\r\n      config._isValid = false\r\n    break\r\n  case 'jD':\r\n  case 'jDD':\r\n  case 'jDDD':\r\n  case 'jDDDD':\r\n    if (input != null)\r\n      datePartArray[2] = ~~input\r\n    break\r\n  case 'jYY':\r\n    datePartArray[0] = ~~input + (~~input > 47 ? 1300 : 1400)\r\n    break\r\n  case 'jYYYY':\r\n  case 'jYYYYY':\r\n    datePartArray[0] = ~~input\r\n  }\r\n  if (input == null)\r\n    config._isValid = false\r\n}\r\n\r\nfunction dateFromArray(config) {\r\n  var g\r\n    , j\r\n    , jy = config._a[0]\r\n    , jm = config._a[1]\r\n    , jd = config._a[2]\r\n\r\n  if ((jy == null) && (jm == null) && (jd == null))\r\n    return [0, 0, 1]\r\n  jy = jy != null ? jy : 0\r\n  jm = jm != null ? jm : 0\r\n  jd = jd != null ? jd : 1\r\n  if (jd < 1 || jd > jMoment.jDaysInMonth(jy, jm) || jm < 0 || jm > 11)\r\n    config._isValid = false\r\n  g = toGregorian(jy, jm, jd)\r\n  j = toJalaali(g.gy, g.gm, g.gd)\r\n  if (isNaN(g.gy))\r\n    config._isValid = false\r\n  config._jDiff = 0\r\n  if (~~j.jy !== jy)\r\n    config._jDiff += 1\r\n  if (~~j.jm !== jm)\r\n    config._jDiff += 1\r\n  if (~~j.jd !== jd)\r\n    config._jDiff += 1\r\n  return [g.gy, g.gm, g.gd]\r\n}\r\n\r\nfunction makeDateFromStringAndFormat(config) {\r\n  var tokens = config._f.match(formattingTokens)\r\n    , string = config._i + ''\r\n    , len = tokens.length\r\n    , i\r\n    , token\r\n    , parsedInput\r\n\r\n  config._a = []\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    token = tokens[i]\r\n    parsedInput = (getParseRegexForToken(token, config).exec(string) || [])[0]\r\n    if (parsedInput)\r\n      string = string.slice(string.indexOf(parsedInput) + parsedInput.length)\r\n    if (formatTokenFunctions[token])\r\n      addTimeToArrayFromToken(token, parsedInput, config)\r\n  }\r\n  if (string)\r\n    config._il = string\r\n  return dateFromArray(config)\r\n}\r\n\r\nfunction makeDateFromStringAndArray(config, utc) {\r\n  var len = config._f.length\r\n    , i\r\n    , format\r\n    , tempMoment\r\n    , bestMoment\r\n    , currentScore\r\n    , scoreToBeat\r\n\r\n  if (len === 0) {\r\n    return makeMoment(new Date(NaN))\r\n  }\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    format = config._f[i]\r\n    currentScore = 0\r\n    tempMoment = makeMoment(config._i, format, config._l, config._strict, utc)\r\n\r\n    if (!tempMoment.isValid()) continue\r\n\r\n    // currentScore = compareArrays(tempMoment._a, tempMoment.toArray())\r\n    currentScore += tempMoment._jDiff\r\n    if (tempMoment._il)\r\n      currentScore += tempMoment._il.length\r\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\r\n      scoreToBeat = currentScore\r\n      bestMoment = tempMoment\r\n    }\r\n  }\r\n\r\n  return bestMoment\r\n}\r\n\r\nfunction removeParsedTokens(config) {\r\n  var string = config._i + ''\r\n    , input = ''\r\n    , format = ''\r\n    , array = config._f.match(formattingTokens)\r\n    , len = array.length\r\n    , i\r\n    , match\r\n    , parsed\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    match = array[i]\r\n    parsed = (getParseRegexForToken(match, config).exec(string) || [])[0]\r\n    if (parsed)\r\n      string = string.slice(string.indexOf(parsed) + parsed.length)\r\n    if (!(formatTokenFunctions[match] instanceof Function)) {\r\n      format += match\r\n      if (parsed)\r\n        input += parsed\r\n    }\r\n  }\r\n  config._i = input\r\n  config._f = format\r\n}\r\n\r\n/************************************\r\n    Week of Year\r\n************************************/\r\n\r\nfunction jWeekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\r\n  var end = firstDayOfWeekOfYear - firstDayOfWeek\r\n    , daysToDayOfWeek = firstDayOfWeekOfYear - mom.day()\r\n    , adjustedMoment\r\n\r\n  if (daysToDayOfWeek > end) {\r\n    daysToDayOfWeek -= 7\r\n  }\r\n  if (daysToDayOfWeek < end - 7) {\r\n    daysToDayOfWeek += 7\r\n  }\r\n  adjustedMoment = jMoment(mom).add(daysToDayOfWeek, 'd')\r\n  return  { week: Math.ceil(adjustedMoment.jDayOfYear() / 7)\r\n          , year: adjustedMoment.jYear()\r\n          }\r\n}\r\n\r\n/************************************\r\n    Top Level Functions\r\n************************************/\r\nvar maxTimestamp = 57724432199999\r\n\r\nfunction makeMoment(input, format, lang, strict, utc) {\r\n  if (typeof lang === 'boolean') {\r\n    strict = lang\r\n    lang = undefined\r\n  }\r\n\r\n  if (format && typeof format === 'string')\r\n    format = fixFormat(format, moment)\r\n\r\n  var config =\r\n      { _i: input\r\n      , _f: format\r\n      , _l: lang\r\n      , _strict: strict\r\n      , _isUTC: utc\r\n      }\r\n    , date\r\n    , m\r\n    , jm\r\n    , origInput = input\r\n    , origFormat = format\r\n  if (format) {\r\n    if (isArray(format)) {\r\n      return makeDateFromStringAndArray(config, utc)\r\n    } else {\r\n      date = makeDateFromStringAndFormat(config)\r\n      removeParsedTokens(config)\r\n      format = 'YYYY-MM-DD-' + config._f\r\n      input = leftZeroFill(date[0], 4) + '-'\r\n            + leftZeroFill(date[1] + 1, 2) + '-'\r\n            + leftZeroFill(date[2], 2) + '-'\r\n            + config._i\r\n    }\r\n  }\r\n  if (utc)\r\n    m = moment.utc(input, format, lang, strict)\r\n  else\r\n    m = moment(input, format, lang, strict)\r\n  if (config._isValid === false)\r\n    m._isValid = false\r\n  m._jDiff = config._jDiff || 0\r\n  jm = objectCreate(jMoment.fn)\r\n  extend(jm, m)\r\n  if (strict && format && jm.isValid()) {\r\n    jm._isValid = jm.format(origFormat) === origInput\r\n  }\r\n  if (m._d.getTime() > maxTimestamp) {\r\n    jm._isValid = false\r\n  }\r\n  return jm\r\n}\r\n\r\nfunction jMoment(input, format, lang, strict) {\r\n  return makeMoment(input, format, lang, strict, false)\r\n}\r\n\r\nextend(jMoment, moment)\r\njMoment.fn = objectCreate(moment.fn)\r\n\r\njMoment.utc = function (input, format, lang, strict) {\r\n  return makeMoment(input, format, lang, strict, true)\r\n}\r\n\r\njMoment.unix = function (input) {\r\n  return makeMoment(input * 1000)\r\n}\r\n\r\n/************************************\r\n    jMoment Prototype\r\n************************************/\r\n\r\nfunction fixFormat(format, _moment) {\r\n  var i = 5\r\n  var replace = function (input) {\r\n    return _moment.localeData().longDateFormat(input) || input\r\n  }\r\n  while (i > 0 && localFormattingTokens.test(format)) {\r\n    i -= 1\r\n    format = format.replace(localFormattingTokens, replace)\r\n  }\r\n  return format\r\n}\r\n\r\njMoment.fn.format = function (format) {\r\n\r\n  if (format) {\r\n    format = fixFormat(format, this)\r\n\r\n    if (!formatFunctions[format]) {\r\n      formatFunctions[format] = makeFormatFunction(format)\r\n    }\r\n    format = formatFunctions[format](this)\r\n  }\r\n  return moment.fn.format.call(this, format)\r\n}\r\n\r\njMoment.fn.jYear = function (input) {\r\n  var lastDay\r\n    , j\r\n    , g\r\n  if (typeof input === 'number') {\r\n    j = toJalaali(this.year(), this.month(), this.date())\r\n    lastDay = Math.min(j.jd, jMoment.jDaysInMonth(input, j.jm))\r\n    g = toGregorian(input, j.jm, lastDay)\r\n    setDate(this, g.gy, g.gm, g.gd)\r\n    moment.updateOffset(this)\r\n    return this\r\n  } else {\r\n    return toJalaali(this.year(), this.month(), this.date()).jy\r\n  }\r\n}\r\n\r\njMoment.fn.jMonth = function (input) {\r\n  var lastDay\r\n    , j\r\n    , g\r\n  if (input != null) {\r\n    if (typeof input === 'string') {\r\n      input = this.localeData().jMonthsParse(input)\r\n      if (typeof input !== 'number')\r\n        return this\r\n    }\r\n    j = toJalaali(this.year(), this.month(), this.date())\r\n    lastDay = Math.min(j.jd, jMoment.jDaysInMonth(j.jy, input))\r\n    this.jYear(j.jy + div(input, 12))\r\n    input = mod(input, 12)\r\n    if (input < 0) {\r\n      input += 12\r\n      this.jYear(this.jYear() - 1)\r\n    }\r\n    g = toGregorian(this.jYear(), input, lastDay)\r\n    setDate(this, g.gy, g.gm, g.gd)\r\n    moment.updateOffset(this)\r\n    return this\r\n  } else {\r\n    return toJalaali(this.year(), this.month(), this.date()).jm\r\n  }\r\n}\r\n\r\njMoment.fn.jDate = function (input) {\r\n  var j\r\n    , g\r\n  if (typeof input === 'number') {\r\n    j = toJalaali(this.year(), this.month(), this.date())\r\n    g = toGregorian(j.jy, j.jm, input)\r\n    setDate(this, g.gy, g.gm, g.gd)\r\n    moment.updateOffset(this)\r\n    return this\r\n  } else {\r\n    return toJalaali(this.year(), this.month(), this.date()).jd\r\n  }\r\n}\r\n\r\njMoment.fn.jDayOfYear = function (input) {\r\n  var dayOfYear = Math.round((jMoment(this).startOf('day') - jMoment(this).startOf('jYear')) / 864e5) + 1\r\n  return input == null ? dayOfYear : this.add(input - dayOfYear, 'd')\r\n}\r\n\r\njMoment.fn.jWeek = function (input) {\r\n  var week = jWeekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).week\r\n  return input == null ? week : this.add((input - week) * 7, 'd')\r\n}\r\n\r\njMoment.fn.jWeekYear = function (input) {\r\n  var year = jWeekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year\r\n  return input == null ? year : this.add(input - year, 'y')\r\n}\r\n\r\njMoment.fn.add = function (val, units) {\r\n  var temp\r\n  if (units !== null && !isNaN(+units)) {\r\n    temp = val\r\n    val = units\r\n    units = temp\r\n  }\r\n  units = normalizeUnits(units)\r\n  if (units === 'jyear') {\r\n    this.jYear(this.jYear() + val)\r\n  } else if (units === 'jmonth') {\r\n    this.jMonth(this.jMonth() + val)\r\n  } else {\r\n    moment.fn.add.call(this, val, units)\r\n    if (isNaN(this.jYear())) {\r\n      this._isValid = false\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\njMoment.fn.subtract = function (val, units) {\r\n  var temp\r\n  if (units !== null && !isNaN(+units)) {\r\n    temp = val\r\n    val = units\r\n    units = temp\r\n  }\r\n  units = normalizeUnits(units)\r\n  if (units === 'jyear') {\r\n    this.jYear(this.jYear() - val)\r\n  } else if (units === 'jmonth') {\r\n    this.jMonth(this.jMonth() - val)\r\n  } else {\r\n    moment.fn.subtract.call(this, val, units)\r\n  }\r\n  return this\r\n}\r\n\r\njMoment.fn.startOf = function (units) {\r\n  units = normalizeUnits(units)\r\n  if (units === 'jyear' || units === 'jmonth') {\r\n    if (units === 'jyear') {\r\n      this.jMonth(0)\r\n    }\r\n    this.jDate(1)\r\n    this.hours(0)\r\n    this.minutes(0)\r\n    this.seconds(0)\r\n    this.milliseconds(0)\r\n    return this\r\n  } else {\r\n    return moment.fn.startOf.call(this, units)\r\n  }\r\n}\r\n\r\njMoment.fn.endOf = function (units) {\r\n  units = normalizeUnits(units)\r\n  if (units === undefined || units === 'milisecond') {\r\n    return this\r\n  }\r\n  return this.startOf(units).add(1, (units === 'isoweek' ? 'week' : units)).subtract(1, 'ms')\r\n}\r\n\r\njMoment.fn.isSame = function (other, units) {\r\n  units = normalizeUnits(units)\r\n  if (units === 'jyear' || units === 'jmonth') {\r\n    return moment.fn.isSame.call(this.startOf(units), other.startOf(units))\r\n  }\r\n  return moment.fn.isSame.call(this, other, units)\r\n}\r\n\r\njMoment.fn.clone = function () {\r\n  return jMoment(this)\r\n}\r\n\r\njMoment.fn.jYears = jMoment.fn.jYear\r\njMoment.fn.jMonths = jMoment.fn.jMonth\r\njMoment.fn.jDates = jMoment.fn.jDate\r\njMoment.fn.jWeeks = jMoment.fn.jWeek\r\n\r\n/************************************\r\n    jMoment Statics\r\n************************************/\r\n\r\njMoment.jDaysInMonth = function (year, month) {\r\n  year += div(month, 12)\r\n  month = mod(month, 12)\r\n  if (month < 0) {\r\n    month += 12\r\n    year -= 1\r\n  }\r\n  if (month < 6) {\r\n    return 31\r\n  } else if (month < 11) {\r\n    return 30\r\n  } else if (jMoment.jIsLeapYear(year)) {\r\n    return 30\r\n  } else {\r\n    return 29\r\n  }\r\n}\r\n\r\njMoment.jIsLeapYear = jalaali.isLeapJalaaliYear\r\n\r\njMoment.loadPersian = function (args) {\r\n  var usePersianDigits =  args !== undefined && args.hasOwnProperty('usePersianDigits') ? args.usePersianDigits : false\r\n  var dialect =  args !== undefined && args.hasOwnProperty('dialect') ? args.dialect : 'persian'\r\n  moment.locale('fa')\r\n  moment.updateLocale('fa'\r\n  , { months: ('ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر').split('_')\r\n    , monthsShort: ('ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر').split('_')\r\n    , weekdays:\r\n      {\r\n        'persian': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'persian-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysShort:\r\n      {\r\n        'persian': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'persian-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysMin:\r\n      {\r\n        'persian': 'ی_د_س_چ_پ_آ_ش'.split('_'),\r\n        'persian-modern': 'ی_د_س_چ_پ_ج_ش'.split('_')\r\n      }[dialect]\r\n    , longDateFormat:\r\n      { LT: 'HH:mm'\r\n      , L: 'jYYYY/jMM/jDD'\r\n      , LL: 'jD jMMMM jYYYY'\r\n      , LLL: 'jD jMMMM jYYYY LT'\r\n      , LLLL: 'dddd، jD jMMMM jYYYY LT'\r\n      }\r\n    , calendar:\r\n      { sameDay: '[امروز ساعت] LT'\r\n      , nextDay: '[فردا ساعت] LT'\r\n      , nextWeek: 'dddd [ساعت] LT'\r\n      , lastDay: '[دیروز ساعت] LT'\r\n      , lastWeek: 'dddd [ی پیش ساعت] LT'\r\n      , sameElse: 'L'\r\n      }\r\n    , relativeTime:\r\n      { future: 'در %s'\r\n      , past: '%s پیش'\r\n      , s: 'چند ثانیه'\r\n      , m: '1 دقیقه'\r\n      , mm: '%d دقیقه'\r\n      , h: '1 ساعت'\r\n      , hh: '%d ساعت'\r\n      , d: '1 روز'\r\n      , dd: '%d روز'\r\n      , M: '1 ماه'\r\n      , MM: '%d ماه'\r\n      , y: '1 سال'\r\n      , yy: '%d سال'\r\n      }\r\n    , preparse: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/[۰-۹]/g, function (match) {\r\n            return numberMap[match]\r\n          }).replace(/،/g, ',')\r\n        }\r\n        return string\r\n    }\r\n    , postformat: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/\\d/g, function (match) {\r\n            return symbolMap[match]\r\n          }).replace(/,/g, '،')\r\n        }\r\n        return string\r\n    }\r\n    , ordinal: '%dم'\r\n    , week:\r\n      { dow: 6 // Saturday is the first day of the week.\r\n      , doy: 12 // The week that contains Jan 1st is the first week of the year.\r\n      }\r\n    , meridiem: function (hour) {\r\n        return hour < 12 ? 'ق.ظ' : 'ب.ظ'\r\n      }\r\n    , jMonths:\r\n      {\r\n        'persian': ('فروردین_اردیبهشت_خرداد_تیر_امرداد_شهریور_مهر_آبان_آذر_دی_بهمن_اسفند').split('_'),\r\n        'persian-modern': ('فروردین_اردیبهشت_خرداد_تیر_مرداد_شهریور_مهر_آبان_آذر_دی_بهمن_اسفند').split('_')\r\n      }[dialect]\r\n    , jMonthsShort:\r\n      {\r\n        'persian': 'فرو_ارد_خرد_تیر_امر_شهر_مهر_آبا_آذر_دی_بهم_اسف'.split('_'),\r\n        'persian-modern': 'فرو_ارد_خرد_تیر_مرد_شهر_مهر_آبا_آذر_دی_بهم_اسف'.split('_')\r\n      }[dialect]\r\n    }\r\n  )\r\n}\r\n\r\n\r\njMoment.loadPersian_dari = function (args) {\r\n  var usePersianDigits =  args !== undefined && args.hasOwnProperty('usePersianDigits') ? args.usePersianDigits : false\r\n  var dialect =  args !== undefined && args.hasOwnProperty('dialect') ? args.dialect : 'persian-dari'\r\n  moment.locale('fa-af')\r\n  moment.updateLocale('fa-af'\r\n  , { months: ('جنوری_فبروری_مارچ_اپریل_می_جون_جولای_آگست_سپتمبر_اکتوبر_نومبر_دیسمبر').split('_')\r\n    , monthsShort: ('جنوری_فبروری_مارچ_اپریل_می_جون_جولای_آگست_سپتمبر_اکتوبر_نومبر_دیسمبر').split('_')\r\n    , weekdays:\r\n      {\r\n        'persian': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'persian-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysShort:\r\n      {\r\n        'persian': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'persian-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysMin:\r\n      {\r\n        'persian': 'ی_د_س_چ_پ_آ_ش'.split('_'),\r\n        'persian-modern': 'ی_د_س_چ_پ_ج_ش'.split('_')\r\n      }[dialect]\r\n    , longDateFormat:\r\n      { LT: 'HH:mm'\r\n      , L: 'jYYYY/jMM/jDD'\r\n      , LL: 'jD jMMMM jYYYY'\r\n      , LLL: 'jD jMMMM jYYYY LT'\r\n      , LLLL: 'dddd، jD jMMMM jYYYY LT'\r\n      }\r\n    , calendar:\r\n      { sameDay: '[امروز ساعت] LT'\r\n      , nextDay: '[فردا ساعت] LT'\r\n      , nextWeek: 'dddd [ساعت] LT'\r\n      , lastDay: '[دیروز ساعت] LT'\r\n      , lastWeek: 'dddd [ی پیش ساعت] LT'\r\n      , sameElse: 'L'\r\n      }\r\n    , relativeTime:\r\n      { future: 'در %s'\r\n      , past: '%s پیش'\r\n      , s: 'چند ثانیه'\r\n      , m: '1 دقیقه'\r\n      , mm: '%d دقیقه'\r\n      , h: '1 ساعت'\r\n      , hh: '%d ساعت'\r\n      , d: '1 روز'\r\n      , dd: '%d روز'\r\n      , M: '1 ماه'\r\n      , MM: '%d ماه'\r\n      , y: '1 سال'\r\n      , yy: '%d سال'\r\n      }\r\n    , preparse: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/[۰-۹]/g, function (match) {\r\n            return numberMap[match]\r\n          }).replace(/،/g, ',')\r\n        }\r\n        return string\r\n    }\r\n    , postformat: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/\\d/g, function (match) {\r\n            return symbolMap[match]\r\n          }).replace(/,/g, '،')\r\n        }\r\n        return string\r\n    }\r\n    , ordinal: '%dم'\r\n    , week:\r\n      { dow: 6 // Saturday is the first day of the week.\r\n      , doy: 12 // The week that contains Jan 1st is the first week of the year.\r\n      }\r\n    , meridiem: function (hour) {\r\n        return hour < 12 ? 'ق.ظ' : 'ب.ظ'\r\n      }\r\n    , jMonths:\r\n      {\r\n        'persian-dari': ('حمل_ثور_جوزا_سرطان_اسد_سنبله_میزان_عقرب_قوس_جدی_دلو_حوت').split('_'),\r\n        'persian-modern-dari': ('حمل_ثور_جوزا_سرطان_اسد_سنبله_میزان_عقرب_قوس_جدی_دلو_حوت').split('_')\r\n      }[dialect]\r\n    , jMonthsShort:\r\n      {\r\n        'persian-dari': 'حمل_ثور_جوزا_سرط_اسد_سنب_میز_عقر_قوس_جدی_دلو_حوت'.split('_'),\r\n        'persian-modern-dari': 'حمل_ثور_جوزا_سرط_اسد_سنب_میز_عقر_قوس_جدی_دلو_حوت'.split('_')\r\n      }[dialect]\r\n    }\r\n  )\r\n}\r\n\r\njMoment.loadPashto = function (args) {\r\n  var usePersianDigits =  args !== undefined && args.hasOwnProperty('usePersianDigits') ? args.usePersianDigits : false\r\n  var dialect =  args !== undefined && args.hasOwnProperty('dialect') ? args.dialect : 'pashto'\r\n  moment.locale('ps-af')\r\n  moment.updateLocale('ps-af'\r\n  , { months: ('جنوری_فبروری_مارچ_اپریل_می_جون_جولای_آگست_سپتمبر_اکتوبر_نومبر_دیسمبر').split('_')\r\n    , monthsShort: ('جنوری_فبروری_مارچ_اپریل_می_جون_جولای_آگست_سپتمبر_اکتوبر_نومبر_دیسمبر').split('_')\r\n    , weekdays:\r\n      {\r\n        'pashto': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'pashto-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysShort:\r\n      {\r\n        'pashto': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_آدینه_شنبه').split('_'),\r\n        'pashto-modern': ('یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه').split('_')\r\n      }[dialect]\r\n    , weekdaysMin:\r\n      {\r\n        'pashto': 'ی_د_س_چ_پ_آ_ش'.split('_'),\r\n        'pashto-modern': 'ی_د_س_چ_پ_ج_ش'.split('_')\r\n      }[dialect]\r\n    , longDateFormat:\r\n      { LT: 'HH:mm'\r\n      , L: 'jYYYY/jMM/jDD'\r\n      , LL: 'jD jMMMM jYYYY'\r\n      , LLL: 'jD jMMMM jYYYY LT'\r\n      , LLLL: 'dddd، jD jMMMM jYYYY LT'\r\n      }\r\n    , calendar:\r\n      { sameDay: '[امروز ساعت] LT'\r\n      , nextDay: '[فردا ساعت] LT'\r\n      , nextWeek: 'dddd [ساعت] LT'\r\n      , lastDay: '[دیروز ساعت] LT'\r\n      , lastWeek: 'dddd [ی پیش ساعت] LT'\r\n      , sameElse: 'L'\r\n      }\r\n    , relativeTime:\r\n      { future: 'در %s'\r\n      , past: '%s پیش'\r\n      , s: 'چند ثانیه'\r\n      , m: '1 دقیقه'\r\n      , mm: '%d دقیقه'\r\n      , h: '1 ساعت'\r\n      , hh: '%d ساعت'\r\n      , d: '1 روز'\r\n      , dd: '%d روز'\r\n      , M: '1 ماه'\r\n      , MM: '%d ماه'\r\n      , y: '1 سال'\r\n      , yy: '%d سال'\r\n      }\r\n    , preparse: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/[۰-۹]/g, function (match) {\r\n            return numberMap[match]\r\n          }).replace(/،/g, ',')\r\n        }\r\n        return string\r\n    }\r\n    , postformat: function (string) {\r\n        if (usePersianDigits) {\r\n          return string.replace(/\\d/g, function (match) {\r\n            return symbolMap[match]\r\n          }).replace(/,/g, '،')\r\n        }\r\n        return string\r\n    }\r\n    , ordinal: '%dم'\r\n    , week:\r\n      { dow: 6 // Saturday is the first day of the week.\r\n      , doy: 12 // The week that contains Jan 1st is the first week of the year.\r\n      }\r\n    , meridiem: function (hour) {\r\n        return hour < 12 ? 'ق.ظ' : 'ب.ظ'\r\n      }\r\n    , jMonths:\r\n      {\r\n        'pashto': ('وری_غویی_غبرګولی_چنګاښ_زمری_وږی_تله_لړم_لیندی_مرغومی_سلواغه_کب').split('_'),\r\n        'pashto-modern': ('وری_غویی_غبرګولی_چنګاښ_زمری_وږی_تله_لړم_لیندی_مرغومی_سلواغه_کب').split('_')\r\n      }[dialect]\r\n    , jMonthsShort:\r\n      {\r\n        'pashto': 'وری_غوی_غبر_چنګ_زمر_وږی_لړم_لین_مرغ_سلو_کب'.split('_'),\r\n        'pashto-modern': 'وری_غوی_غبر_چنګ_زمر_وږی_لړم_لین_مرغ_سلو_کب'.split('_')\r\n      }[dialect]\r\n    }\r\n  )\r\n}\r\n\r\njMoment.jConvert =  { toJalaali: toJalaali\r\n                    , toGregorian: toGregorian\r\n                    }\r\n\r\n/************************************\r\n    Jalaali Conversion\r\n************************************/\r\n\r\nfunction toJalaali(gy, gm, gd) {\r\n  try {\r\n    var j = jalaali.toJalaali(gy, gm + 1, gd)\r\n    j.jm -= 1\r\n    return j\r\n  } catch (e) {\r\n    return {\r\n      jy: NaN\r\n      , jm: NaN\r\n      , jd: NaN\r\n    }\r\n  }\r\n}\r\n\r\nfunction toGregorian(jy, jm, jd) {\r\n  try {\r\n    var g = jalaali.toGregorian(jy, jm + 1, jd)\r\n    g.gm -= 1\r\n    return g\r\n  } catch (e) {\r\n    return {\r\n      gy: NaN\r\n      , gm: NaN\r\n      , gd: NaN\r\n    }\r\n  }\r\n}\r\n\r\n/*\r\n  Utility helper functions.\r\n*/\r\n\r\nfunction div(a, b) {\r\n  return ~~(a / b)\r\n}\r\n\r\nfunction mod(a, b) {\r\n  return a - ~~(a / b) * b\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
